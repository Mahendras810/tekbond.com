{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{%
  set classes = [
    'paragraph',
    'paragraph--type--' ~ paragraph.bundle|clean_class,
    view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
    not paragraph.isPublished() ? 'paragraph--unpublished'
  ]
%}
{% block paragraph %}
  <div{{ attributes.addClass(classes) }}>
    {% block content %}
      <section class="why-choose-us">
        <div class="container">
          <div class="row justify-content-center mb-5">
            <div class="col-md-10 mt-5 text-center">
              <h2>{{ content.field_title }}</h2>
              {{ content.field_sub_title }}
            </div>
          </div>
          <div class="row">
            {% if paragraph %}
              {# Accessing field values directly from the paragraph entity #}
              {% for item in paragraph.field_section %}
                {# Get the referenced paragraph entity #}
                {% set referenced_paragraph = item.entity %}
                {% if referenced_paragraph and referenced_paragraph.bundle == 'why_choose_us_sections' %}
                  {# Accessing field values from the referenced paragraph entity #}
                  {% set field_image_uri = referenced_paragraph.field_image.entity.uri.value %}
                  {% set field_section_body = referenced_paragraph.field_section_body.value %}
                  {% set field_title = referenced_paragraph.field_title.value %}
                  <div class="col-md-4 mb-4">
                    <div class="card border-0 shadow">
                      <div class="card-body text-center">
                        <img src="{{ file_url(field_image_uri) }}" class="mb-3" alt="{{ field_title }}" style="max-width: 100px;">
                        <h5 class="card-title mb-3">{{ field_title }}</h5>
                        <p class="card-text">{{ field_section_body|raw }}</p>
                      </div>
                    </div>
                  </div>
                {% endif %}
              {% endfor %}
            {% endif %}
          </div>
        </div>
      </section>
    {% endblock %}
  </div>
{% endblock paragraph %}
